#combinatory
if NOT Read  then 
(*Сюди вставить фрагмент читання*)
Fs_01:=INT_REAL(eep_n_r(1));
Fs_02:=INT_REAL(eep_n_r(2));
Fs_03:=INT_REAL(eep_n_r(3));
Fs_04:=INT_REAL(eep_n_r(4));
Fs_05:=INT_REAL(eep_n_r(5));
Fs_06:=INT_REAL(eep_n_r(6));
Fs_07:=INT_REAL(eep_n_r(7));
Fs_08:=INT_REAL(eep_n_r(8));
Fs_09:=INT_REAL(eep_n_r(9));
Fs_10:=INT_REAL(eep_n_r(10));
Fs_11:=INT_REAL(eep_n_r(11));
Kf_01:=eep_n_r(12);
Kf_02:=eep_n_r(13);
Kf_03:=eep_n_r(14);
Kf_04:=eep_n_r(15);
Kf_05:=eep_n_r(16);
Kf_06:=eep_n_r(17);
Kf_07:=eep_n_r(18);
Kf_08:=eep_n_r(19);
Kf_09:=eep_n_r(20);
Kf_10:=eep_n_r(21);
Kf_11:=eep_n_r(22);

Tw_1:=TMR(eep_n_r(23));
Tw_2:=TMR(eep_n_r(24));
Tw_3:=TMR(eep_n_r(25));

Xs_zd_min:=INT_REAL(eep_n_r(26));
Xv_zd_min:=INT_REAL(eep_n_r(27));
Lsusp_max:=INT_REAL(eep_n_r(28));

Lv_min:=INT_REAL(eep_n_r(29));
Lv_max:=INT_REAL(eep_n_r(30));
Tv_min:=INT_REAL(eep_n_r(31));
Tv_max:=INT_REAL(eep_n_r(32));

AM_Tv:=BOO(eep_n_r(33));

AM_01:=BOO(eep_n_r(34));
AM_02:=BOO(eep_n_r(35));
Xs_np_zd:=INT_REAL(eep_n_r(36));
KP_01:=INT_REAL(eep_n_r(37));
KP_02:=INT_REAL(eep_n_r(38));
TI_01:=INT_REAL(eep_n_r(39));
TI_02:=INT_REAL(eep_n_r(40));
TD_01:=INT_REAL(eep_n_r(41));
TD_02:=INT_REAL(eep_n_r(42));
Xmin_01:=INT_REAL(eep_n_r(43));
Xmin_02:=INT_REAL(eep_n_r(44));
Xmax_01:=INT_REAL(eep_n_r(45));
Xmax_02:=INT_REAL(eep_n_r(46));
Ls_min:=INT_REAL(eep_n_r(47));
Ls_start:=INT_REAL(eep_n_r(48));

Rev_01:=BOO(eep_n_r(49));
Rev_02:=BOO(eep_n_r(50));
Pvoda_Zd:=INT_REAL(eep_n_r(51));


(*Температура води*)
Kf_12:=eep_n_r(52);
Kf_13:=eep_n_r(53);
Fs_12:=INT_REAL(eep_n_r(54));
Fs_13:=INT_REAL(eep_n_r(55));
SP_12:=INT_REAL(eep_n_r(56));
SP_13:=INT_REAL(eep_n_r(57));
DSP_12:=INT_REAL(eep_n_r(58));
DSP_13:=INT_REAL(eep_n_r(59));
MSP_12:=INT_REAL(eep_n_r(60));
XSP_13:=INT_REAL(eep_n_r(61));

AM_12:=BOO(eep_n_r(62));
AM_13:=BOO(eep_n_r(63));

Gsusp_zd:=INT_REAL(eep_n_r(64));
Mode_01:=BOO(eep_n_r(65));


Read:=TRUE;
tstart (Sav_tm);
else

if Sav_tm >t#30m then 

	Sav_tm:=t#0s;

	if Save then
		Res:=eep_en();
		Save:=FALSE;
		Sav_ST:=1; 
	end_if;

end_if;

case sav_ST of 
1 :
Res:=eep_n_w(1,REAL_INT(Fs_01));
Res:=eep_n_w(2,REAL_INT(Fs_02));
Res:=eep_n_w(3,REAL_INT(Fs_03));
Res:=eep_n_w(4,REAL_INT(Fs_04));
Res:=eep_n_w(5,REAL_INT(Fs_05));
Res:=eep_n_w(6,REAL_INT(Fs_06));
Res:=eep_n_w(7,REAL_INT(Fs_07));
Res:=eep_n_w(8,REAL_INT(Fs_08));
Res:=eep_n_w(9,REAL_INT(Fs_09));
Res:=eep_n_w(10,REAL_INT(Fs_10));
Res:=eep_n_w(11,REAL_INT(Fs_11));
Res:=eep_n_w(12,Kf_01);
Res:=eep_n_w(13,Kf_02);
Res:=eep_n_w(14,Kf_03);
Res:=eep_n_w(15,Kf_04);
Res:=eep_n_w(16,Kf_05);
Res:=eep_n_w(17,Kf_06);
Res:=eep_n_w(18,Kf_07);
Res:=eep_n_w(19,Kf_08);
  Sav_ST:=Sav_ST+1;

2:

Res:=eep_n_w(20,Kf_09);
Res:=eep_n_w(21,Kf_10);
Res:=eep_n_w(22,Kf_11);

Res:=eep_n_w(23,ANA(Tw_1));
Res:=eep_n_w(24,ANA(Tw_2));
Res:=eep_n_w(25,ANA(Tw_3));

Res:=eep_n_w(26,REAL_INT(Xs_zd_min));
Res:=eep_n_w(27,REAL_INT(Xv_zd_min));
Res:=eep_n_w(28,REAL_INT(Lsusp_max));


Res:=eep_n_w(29,REAL_INT(Lv_min));
Res:=eep_n_w(30,REAL_INT(Lv_max));
Res:=eep_n_w(31,REAL_INT(Tv_min));
Res:=eep_n_w(32,REAL_INT(Tv_max));

  Sav_ST:=Sav_ST+1;
3:
Res:=eep_n_w(33,ANA(AM_Tv));
Res:=eep_n_w(34,ANA(AM_01));
Res:=eep_n_w(35,ANA(AM_02));
Res:=eep_n_w(36,REAL_INT(Xs_np_zd));
Res:=eep_n_w(37,REAL_INT(KP_01));
Res:=eep_n_w(38,REAL_INT(KP_02));
Res:=eep_n_w(39,REAL_INT(TI_01));
Res:=eep_n_w(40,REAL_INT(TI_02));
Res:=eep_n_w(41,REAL_INT(TD_01));
Res:=eep_n_w(42,REAL_INT(TD_02));
Res:=eep_n_w(43,REAL_INT(Xmin_01));
Res:=eep_n_w(44,REAL_INT(Xmin_02));
Res:=eep_n_w(45,REAL_INT(Xmax_01));
Res:=eep_n_w(46,REAL_INT(Xmax_02));
Res:=eep_n_w(47,REAL_INT(Ls_min));
Res:=eep_n_w(48,REAL_INT(Ls_start));

Res:=eep_n_w(49,ANA(Rev_01));
Res:=eep_n_w(50,ANA(Rev_02));
Res:=eep_n_w(51,REAL_INT(Pvoda_zd));

  Sav_ST:=Sav_ST+1;

4:
Res:=eep_n_w(52,Kf_12);
Res:=eep_n_w(53,Kf_13);
Res:=eep_n_w(54,REAL_INT(Fs_12));
Res:=eep_n_w(55,REAL_INT(Fs_13));
Res:=eep_n_w(56,REAL_INT(SP_12));
Res:=eep_n_w(57,REAL_INT(SP_13));
Res:=eep_n_w(58,REAL_INT(DSP_12));
Res:=eep_n_w(59,REAL_INT(DSP_13));
Res:=eep_n_w(60,REAL_INT(MSP_12));
Res:=eep_n_w(61,REAL_INT(XSP_13));

Res:=eep_n_w(62,ANA(AM_12));
Res:=eep_n_w(63,ANA(AM_13));

Res:=eep_n_w(64,REAL_INT(Gsusp_zd));
Res:=eep_n_w(65,ANA(Mode_01));

  Sav_ST:=Sav_ST+1;
	Res:=eep_pr();
else
	Sav_ST:=0;
end_case;


end_if;


